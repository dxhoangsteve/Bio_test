@page "/about-me"
@using BioWeb.Shared.Models.DTOs
@using BioWeb.client.Services
@using BioWeb.client.Components
@inject IApiService ApiService
@inject IJSRuntime JSRuntime
@implements IDisposable

<PageTitle>About Me</PageTitle>

<!-- Server Status Component -->
<ServerStatusComponent IsServerDown="@isServerDown" ErrorMessage="@serverErrorMessage" OnRetry="@HandleRetry" />

@if (!isServerDown)
{
    @if (isLoading)
    {
        <div class="text-center py-5">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Đang tải...</span>
            </div>
            <p class="mt-3">Đang tải thông tin...</p>
        </div>
    }
    else
    {
        <div class="container">
            <div class="row align-items-center">
                <!-- Avatar Column -->
                <div class="col-lg-4 col-md-12 mb-4">
                    <div class="avatar-container">
                        @if (aboutMe != null && !string.IsNullOrEmpty(aboutMe.AvatarURL))
                        {
                            <img src="@aboutMe.AvatarURL" alt="@aboutMe.FullName" class="avatar-image" />
                        }
                        else
                        {
                            <div class="avatar-placeholder">
                                <i class="fas fa-user fa-5x"></i>
                            </div>
                        }
                    </div>
                </div>

                <!-- Info Column -->
                <div class="col-lg-8 col-md-12">
                    @if (aboutMe != null)
                    {
                        <!-- Full Name -->
                        <h1 class="page-title fs-2">@aboutMe.FullName</h1>

                        <!-- Job Title -->
                        <h2 class="page-subtitle m-5">@aboutMe.JobTitle</h2>

                        <!-- Bio Summary -->
                        <p class="page-description">
                            @aboutMe.BioSummary
                        </p>
                    }
                    else
                    {
                        <h1 class="page-title">Đang tải thông tin...</h1>
                        <h2 class="page-subtitle">Vui lòng đợi</h2>
                        <div class="page-description">Đang tải dữ liệu từ server...</div>
                    }
                </div>
            </div>
        </div>
    }
}

@code {
    private AboutMeDto? aboutMe;
    private bool isLoading = true;
    private bool isServerDown = false;
    private string serverErrorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        // Subscribe to server status changes
        ApiService.ServerStatusChanged += OnServerStatusChanged;

        // Check server health first
        var isServerHealthy = await ApiService.CheckServerHealthAsync();
        if (isServerHealthy)
        {
            await LoadAboutMeData();
        }
    }

    private void OnServerStatusChanged(bool isHealthy, string errorMessage)
    {
        isServerDown = !isHealthy;
        serverErrorMessage = errorMessage;

        InvokeAsync(StateHasChanged);
    }

    private async Task LoadAboutMeData()
    {
        try
        {
            isLoading = true;

            // Load About Me info only
            aboutMe = await ApiService.GetAboutMeAsync();

            isLoading = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading about me data: {ex.Message}");
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task HandleRetry()
    {
        isServerDown = false;
        serverErrorMessage = "";
        StateHasChanged();

        var isServerHealthy = await ApiService.CheckServerHealthAsync();
        if (isServerHealthy)
        {
            await LoadAboutMeData();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("console.log", "About Me page loaded");
        }
    }

    public void Dispose()
    {
        ApiService.ServerStatusChanged -= OnServerStatusChanged;
    }
}
