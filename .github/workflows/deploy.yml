name: Deploy BioWeb to VPS

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: bioweb

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          cd /root/bioweb-production

          # Clone/update source code
          if [ ! -d "source" ]; then
            git clone https://github.com/${{ github.repository }} source
          else
            cd source
            git fetch origin
            git reset --hard origin/main
            cd ..
          fi

          # Stop current containers
          docker-compose -f docker-compose.production.yml down || true

          # Build new image directly on VPS
          cd source
          docker build -f Dockerfile.production -t bioweb:latest .
          cd ..

          # Update docker-compose to use local image
          sed -i 's|image:.*|image: bioweb:latest|g' docker-compose.production.yml

          # Start with new image
          docker-compose -f docker-compose.production.yml up -d

          # Clean up old images
          docker image prune -f

          # Health check
          sleep 30

          # Test HTTP redirect
          echo "Testing HTTP redirect..."
          curl -I http://103.157.204.17/ | grep -q "301\|302" || echo "‚ö†Ô∏è HTTP redirect not working"

          # Test HTTPS
          echo "Testing HTTPS..."
          curl -k -f https://103.157.204.17/ || exit 1

          # Test API
          echo "Testing API..."
          curl -k -f https://103.157.204.17/api/health || echo "‚ö†Ô∏è API health check failed"

          echo "‚úÖ Deployment successful!"
          echo "üåê Access your app at: https://103.157.204.17"
