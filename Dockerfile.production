# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copy solution file
COPY *.sln ./

# Copy csproj files and restore dependencies
COPY BioWeb.server/*.csproj ./BioWeb.server/
COPY BioWeb.client/*.csproj ./BioWeb.client/
COPY BioWeb.Shared/*.csproj ./BioWeb.Shared/

# Restore dependencies
RUN dotnet restore

# Copy source code
COPY . .

# Build and publish server (includes Blazor client)
RUN dotnet publish BioWeb.server/BioWeb.server.csproj \
    -c Release \
    -o /app/publish \
    --no-restore \
    --verbosity normal

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS runtime
WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published app
COPY --from=build /app/publish .

# Create required directories
RUN mkdir -p /app/data /app/uploads && \
    chmod 755 /app/data /app/uploads

# Create non-root user for security
RUN groupadd -r appuser && useradd -r -g appuser appuser && \
    chown -R appuser:appuser /app
USER appuser

# Environment variables
ENV ASPNETCORE_URLS=http://+:80
ENV ASPNETCORE_ENVIRONMENT=Production
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV DOTNET_USE_POLLING_FILE_WATCHER=true

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

EXPOSE 80

ENTRYPOINT ["dotnet", "BioWeb.server.dll"]
